generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  username       String
  email          String   @unique
  hashedPassword String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  tasks   Task[]
  goals   Goal[]
  habits  Habit[]
}

model Task {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  text      String
  done      Boolean  @default(false)
  createdAt DateTime @default(now())

  user   User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
}

model Habit {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  createdAt DateTime @default(now())

  user   User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  progression HabitProgression[]
  goals       GoalHabit[]
}

model HabitProgression {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  date     DateTime @default(now())
  value    Int      @default(1) 
  done     Boolean  @default(false)

  habit   Habit @relation(fields: [habitId], references: [id], onDelete: Cascade)
  habitId String @db.ObjectId
}

model Goal {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  startDate   DateTime
  endDate     DateTime
  createdAt   DateTime @default(now())

  user   User @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  checkpoints Checkpoint[]
  links       Link[]
  habits      GoalHabit[]
}

model GoalHabit {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  
  goal   Goal  @relation(fields: [goalId], references: [id], onDelete: Cascade)
  goalId String @db.ObjectId

  habit   Habit  @relation(fields: [habitId], references: [id], onDelete: Cascade)
  habitId String @db.ObjectId
}

model Checkpoint {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  date      DateTime
  notes     String?

  goal   Goal @relation(fields: [goalId], references: [id], onDelete: Cascade)
  goalId String @db.ObjectId
}

model Link {
  id    String   @id @default(auto()) @map("_id") @db.ObjectId
  label String
  url   String

  goal   Goal @relation(fields: [goalId], references: [id], onDelete: Cascade)
  goalId String @db.ObjectId
}
